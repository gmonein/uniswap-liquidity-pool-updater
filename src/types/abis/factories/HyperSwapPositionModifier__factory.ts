/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  HyperSwapPositionModifier,
  HyperSwapPositionModifierInterface,
} from "../HyperSwapPositionModifier";

const _abi = [
  {
    type: "function",
    name: "rebalance",
    stateMutability: "nonpayable",
    inputs: [
      {
        internalType: "tuple",
        name: "params",
        type: "tuple",
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "param6",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "param7",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "param8",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "param9",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
      },
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "tuple",
        name: "extraParams",
        type: "tuple",
        components: [
          {
            internalType: "uint256",
            name: "token0FeeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1FeeAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenOutMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapData0",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "swapData1",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isUnwrapNative",
            type: "bool",
          },
        ],
      },
    ],
    outputs: [],
  },
] as const;

export class HyperSwapPositionModifier__factory {
  static readonly abi = _abi;
  static createInterface(): HyperSwapPositionModifierInterface {
    return new Interface(_abi) as HyperSwapPositionModifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HyperSwapPositionModifier {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as HyperSwapPositionModifier;
  }
}
